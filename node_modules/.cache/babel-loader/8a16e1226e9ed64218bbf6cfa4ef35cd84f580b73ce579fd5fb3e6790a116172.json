{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\weatherapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [deg, setdeg] = useState(\"0\");\n  const [city, setcity] = useState(\"france\");\n  const [desc, setdesc] = useState(\"Raining\");\n  const [enteredvalue, setenteredvalue] = useState(\"\");\n  function handleInput(event) {\n    console.log(event.target.value);\n    setenteredvalue(event.target.value);\n  }\n  function getData() {\n    var weather = axios({\n      method: \"get\",\n      url: `https://api.openweathermap.org/data/2.5/weather?q=${enteredvalue}&appid=1955f033c62b145a8911ec011c92f792`,\n      mode: \"cors\"\n    });\n    weather.then(function (dalta) {\n      setdeg(dalta.data.main.temp);\n      setcity(dalta.data.name);\n      setdesc(dalta.data.weather[0].main);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-row justify-center h-[100vh] items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 rounded-md shadow w-96 h-52\",\n      style: {\n        backgroundImage: \"linear-gradient(120deg, #a6c0fe 0%, #f68084 100%)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-medium\",\n        children: \"Hey!\\u26C5\\u26C8\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs\",\n        children: \"Do you want to know the weather report :)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleInput,\n        type: \"text\",\n        className: \"rounded-md h-6 text-sm mt-2 p-1 outline-none\",\n        placeholder: \"City Name?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getData,\n        className: \"bg-black text-white rounded-lg p-1 text-xs mt-2\",\n        children: \"Get Report\\u26A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs mt-2\",\n        children: [\"Degree: \", deg, \" | City: \", city, \" | Weather: \", desc]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yOvzuD8Mt4wEYo7liUhVOkT7zvE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","useState","jsxDEV","_jsxDEV","App","_s","deg","setdeg","city","setcity","desc","setdesc","enteredvalue","setenteredvalue","handleInput","event","console","log","target","value","getData","weather","method","url","mode","then","dalta","data","main","temp","name","className","children","style","backgroundImage","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/weatherapp/src/App.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nfunction App() {\r\n  const [deg, setdeg] = useState(\"0\");\r\n  const [city, setcity] = useState(\"france\");\r\n  const [desc, setdesc] = useState(\"Raining\");\r\n  const [enteredvalue, setenteredvalue] = useState(\"\");\r\n  function handleInput(event) {\r\n    console.log(event.target.value);\r\n    setenteredvalue(event.target.value);\r\n  }\r\n  function getData() {\r\n    var weather = axios({\r\n      method: \"get\",\r\n      url: `https://api.openweathermap.org/data/2.5/weather?q=${enteredvalue}&appid=1955f033c62b145a8911ec011c92f792`,\r\n      mode: \"cors\",\r\n    });\r\n    weather.then(function (dalta) {\r\n      setdeg(dalta.data.main.temp);\r\n      setcity(dalta.data.name);\r\n      setdesc(dalta.data.weather[0].main);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-row justify-center h-[100vh] items-center\">\r\n      <div\r\n        className=\"p-2 rounded-md shadow w-96 h-52\"\r\n        style={{\r\n          backgroundImage: \"linear-gradient(120deg, #a6c0fe 0%, #f68084 100%)\",\r\n        }}\r\n      >\r\n        <h2 className=\"font-medium\">Hey!⛅⛈️</h2>\r\n        <p className=\"text-xs\">Do you want to know the weather report :)</p>\r\n        <input\r\n          onChange={handleInput}\r\n          type=\"text\"\r\n          className=\"rounded-md h-6 text-sm mt-2 p-1 outline-none\"\r\n          placeholder=\"City Name?\"\r\n        />\r\n        <br />\r\n        <button\r\n          onClick={getData}\r\n          className=\"bg-black text-white rounded-lg p-1 text-xs mt-2\"\r\n        >\r\n          Get Report⚡\r\n        </button>\r\n        <p className=\"text-xs mt-2\">\r\n          Degree: {deg} | City: {city} | Weather: {desc}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}